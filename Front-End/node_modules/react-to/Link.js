'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _HistoryControl = require('./HistoryControl');

var _HistoryControl2 = _interopRequireDefault(_HistoryControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * replace the tag 'A', used to link to a new url
 * @module Link
 */

var Link = function (_React$Component) {
  _inherits(Link, _React$Component);

  function Link() {
    var _Object$getPrototypeO;

    _classCallCheck(this, Link);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Link)).call.apply(_Object$getPrototypeO, [this].concat(args)));

    _this.handleClick = function () {

      if (_this.props.onClick && typeof _this.props.onClick === 'function') {
        _this.props.onClick();
      }

      var _this$props = _this.props;
      var to = _this$props.to;
      var href = _this$props.href;

      if (!to) {
        to = href;
      }
      if (typeof to === 'undefined' || to === null) {
        return;
      }
      if (!to) {
        to = '/';
      }
      if (to.indexOf('#') === 0) {
        to = to.substring(1);
      }
      if (to.indexOf('/') !== 0) {
        to = '/' + to;
      }

      if (_this.context.history.location.pathname === to) {
        return;
      }

      _this.go(to);
    };

    return _this;
  }

  _createClass(Link, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var to = _props.to;
      var href = _props.href;
      var children = _props.children;
      var isActive = _props.isActive;
      var activeStyle = _props.activeStyle;
      var activeClassName = _props.activeClassName;
      var style = _props.style;
      var className = _props.className;
      var type = _props.type;

      var props = _objectWithoutProperties(_props, ['to', 'href', 'children', 'isActive', 'activeStyle', 'activeClassName', 'style', 'className', 'type']);

      if (!type) {
        type = 'a';
      }

      if (isActive) {
        if (typeof isActive === 'function') {
          isActive = isActive();
        } else {
          isActive = !!isActive;
        }
      } else {
        isActive = _HistoryControl2.default.path === to;
      }

      if (isActive) {
        if (activeStyle) style = Object.assign({}, style, activeStyle);
        if (activeClassName) className = className ? className + ' ' + activeClassName : activeClassName;
      }

      return _react2.default.createElement(type, _extends({ onClick: this.handleClick, style: style, className: className }, props), children);
    }
  }]);

  return Link;
}(_react2.default.Component);

Link.propTypes = {
  to: _react2.default.PropTypes.string.isRequired,
  href: _react2.default.PropTypes.string,
  children: _react2.default.PropTypes.any,
  onClick: _react2.default.PropTypes.any
};
Link.contextTypes = {
  history: _react2.default.PropTypes.any,
  routes: _react2.default.PropTypes.array
};
exports.default = Link;


Link.prototype.go = function (to) {
  _HistoryControl2.default.go(to);
};